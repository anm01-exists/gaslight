# Supabase Configuration
VITE_SUPABASE_URL=your_supabase_project_url
VITE_SUPABASE_ANON_KEY=your_supabase_anon_key

# Instructions:
# 1. Create a new project at https://supabase.com
# 2. Go to Settings -> API in your Supabase dashboard
# 3. Copy the Project URL and anon/public key
# 4. Rename this file to .env and fill in your values
# 5. Run the SQL commands below in your Supabase SQL Editor

# SQL to create tables (run this in Supabase SQL Editor):
# 
# -- Create profiles table
# CREATE TABLE profiles (
#   id UUID REFERENCES auth.users ON DELETE CASCADE,
#   email TEXT UNIQUE NOT NULL,
#   full_name TEXT NOT NULL,
#   course TEXT NOT NULL,
#   year INTEGER NOT NULL,
#   college TEXT NOT NULL,
#   phone TEXT,
#   rating DECIMAL DEFAULT 0,
#   total_earnings DECIMAL DEFAULT 0,
#   created_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL,
#   updated_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL,
#   PRIMARY KEY (id)
# );
# 
# -- Create assignments table
# CREATE TABLE assignments (
#   id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
#   title TEXT NOT NULL,
#   description TEXT NOT NULL,
#   category TEXT NOT NULL,
#   budget INTEGER NOT NULL,
#   deadline DATE NOT NULL,
#   tags TEXT[] DEFAULT '{}',
#   attachments INTEGER DEFAULT 0,
#   urgency TEXT CHECK (urgency IN ('low', 'medium', 'high')) DEFAULT 'medium',
#   user_id UUID REFERENCES auth.users ON DELETE CASCADE NOT NULL,
#   student_name TEXT NOT NULL,
#   student_course TEXT NOT NULL,
#   student_rating DECIMAL DEFAULT 0,
#   proposals_count INTEGER DEFAULT 0,
#   created_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL,
#   updated_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL
# );
# 
# -- Enable Row Level Security
# ALTER TABLE profiles ENABLE ROW LEVEL SECURITY;
# ALTER TABLE assignments ENABLE ROW LEVEL SECURITY;
# 
# -- Create policies
# CREATE POLICY "Public profiles are viewable by everyone." ON profiles
#   FOR SELECT USING (true);
# 
# CREATE POLICY "Users can insert their own profile." ON profiles
#   FOR INSERT WITH CHECK (auth.uid() = id);
# 
# CREATE POLICY "Users can update own profile." ON profiles
#   FOR UPDATE USING (auth.uid() = id);
# 
# CREATE POLICY "Assignments are viewable by everyone." ON assignments
#   FOR SELECT USING (true);
# 
# CREATE POLICY "Users can insert their own assignments." ON assignments
#   FOR INSERT WITH CHECK (auth.uid() = user_id);
# 
# CREATE POLICY "Users can update own assignments." ON assignments
#   FOR UPDATE USING (auth.uid() = user_id);
# 
# CREATE POLICY "Users can delete own assignments." ON assignments
#   FOR DELETE USING (auth.uid() = user_id);
